# Default values for radar-rest-sources-authorizer.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# -- Number of radar-rest-sources-authorizer replicas to deploy
replicaCount: 2

image:
  # -- radar-rest-sources-authorizer image repository
  repository: radarbase/radar-rest-source-authorizer
  # -- radar-rest-sources-authorizer image tag (immutable tags are recommended)
  # Overrides the image tag whose default is the chart appVersion.
  tag: 4.4.2
  # -- radar-rest-sources-authorizer image pull policy
  pullPolicy: IfNotPresent

# -- Docker registry secret names as an array
imagePullSecrets: []

# -- String to partially override radar-rest-sources-authorizer.fullname template with a string (will prepend the release name)
nameOverride: ""
# -- String to fully override radar-rest-sources-authorizer.fullname template with a string
fullnameOverride: ""

# -- Configure radar-rest-sources-authorizer pods' Security Context
podSecurityContext: {}
  # fsGroup: 2000

# -- Configure radar-rest-sources-authorizer containers' Security Context
securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

service:
  # -- Kubernetes Service type
  type: ClusterIP
  # -- radar-rest-sources-authorizer port
  port: 8080

ingress:
  # -- Enable ingress controller resource
  enabled: true
  # -- Annotations that define default ingress class, certificate issuer
  # @default -- check values.yaml
  annotations:
    cert-manager.io/cluster-issuer: letsencrypt-prod
  # -- Path within the url structure
  path: /rest-sources/authorizer
  # -- Ingress Path type
  pathType: ImplementationSpecific
  # -- IngressClass that will be be used to implement the Ingress (Kubernetes 1.18+)
  ingressClassName: nginx
  # -- Hosts to accept requests from
  hosts:
    - localhost
  tls:
    # -- TLS Secret Name
    secretName: radar-base-tls-radar-rest-sources-authorizer

resources:
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi

  # -- CPU/Memory resource requests
  requests:
    cpu: 100m
    memory: 128Mi

# -- Node labels for pod assignment
nodeSelector: {}

# -- Toleration labels for pod assignment
tolerations: []

# -- Affinity labels for pod assignment
affinity: {}

# -- Extra environment variables
extraEnvVars: []
#  - name: BEARER_AUTH
#    value: true

# -- Custom livenessProbe that overrides the default one
customLivenessProbe: {}

livenessProbe:
  # -- Enable livenessProbe
  enabled: true
  # -- Initial delay seconds for livenessProbe
  initialDelaySeconds: 5
  # -- Period seconds for livenessProbe
  periodSeconds: 30
  # -- Timeout seconds for livenessProbe
  timeoutSeconds: 3
  # -- Success threshold for livenessProbe
  successThreshold: 1
  # -- Failure threshold for livenessProbe
  failureThreshold: 3

# -- Custom readinessProbe that overrides the default one
customReadinessProbe: {}

readinessProbe:
  # -- Enable readinessProbe
  enabled: true
  # -- Initial delay seconds for readinessProbe
  initialDelaySeconds: 5
  # -- Period seconds for readinessProbe
  periodSeconds: 10
  # -- Timeout seconds for readinessProbe
  timeoutSeconds: 3
  # -- Success threshold for readinessProbe
  successThreshold: 1
  # -- Failure threshold for readinessProbe
  failureThreshold: 3

# -- Network policy defines who can access this application and who this applications has access to
# @default -- check `values.yaml`
networkpolicy:
  policyTypes:
  - Ingress
  - Egress
  ingress:
  - from:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: '{{ .Release.Namespace }}'
      podSelector:
        matchLabels:
          app.kubernetes.io/name: ingress-nginx
  egress:
  - to:
    - namespaceSelector:
        matchLabels:
          kubernetes.io/metadata.name: kube-system
      podSelector:
        matchLabels:
          k8s-app: kube-dns
    ports:
      - port: 53
        protocol: UDP
      - port: 53
        protocol: TCP

# -- OAuth2 client id of the application registered in Management Portal. It is assumed that this is a public client with empty client secret.
clientId: radar_rest_sources_authorizer
# -- Domain name of the server
serverName: localhost
# -- Custom authorization URL of the IDP; needed when deviating from https://<serverName>/managementportal/oauth.
authUrl:
